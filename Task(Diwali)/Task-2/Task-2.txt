import 'package:flutter/material.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:fluttertoast/fluttertoast.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Log in',
      theme: ThemeData(
        primarySwatch: Colors.orange,
      ),
      home: Login(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  final String name;
  MyHomePage({required this.name});

  @override
  MyHomePageState createState() => MyHomePageState(name);
}

class MyHomePageState extends State<MyHomePage> {
  @override
  String name = "";
  MyHomePageState(this.name);

  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("Home"),
      ), 
      body: Container(
        decoration: BoxDecoration(
          image:DecorationImage(image: AssetImage("assets/photos/homepage.jpg"),fit: BoxFit.cover,),
          )
        
        ,
        
        child: Center(
        
            child:  Text("Welcome, $name"),
            
        )
      )
  );
  }
}


class Login extends StatefulWidget {
  const Login({Key? key}) : super(key: key);

  @override
  State<Login> createState() => LoginState();
}

class LoginState extends State<Login> {

  final formKey = GlobalKey<FormState>();
  var email = TextEditingController();
  var password = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(title: Text("Login"),),
        body: Padding(
          padding: EdgeInsets.all(6.0),
          child: Form(
            key: formKey,
            child: Column(
              children: [
                TextFormField(
                  keyboardType: TextInputType.emailAddress,
                  controller: email,
                  validator: (value){
                    if(value == null || value.isEmpty){
                      return "Please Enter Your Email";
                    }
                    return null;
                  },
                  decoration: InputDecoration( 
                      labelText: "Email",
                    prefixIcon: Icon(Icons.email),
                  ),
                ),
                SizedBox(height: 7.0,),
                TextFormField(
                  obscureText: true,
                  controller: password,
                  validator: (value){
                    if(value == null || value.isEmpty){
                      return "Please Enter Your Password";
                    }
                    return null;
                  },
                  decoration: InputDecoration(
                      labelText: "Password",
                       prefixIcon: Icon(Icons.password),
                      
                  ),
                ),
                SizedBox(width: double.infinity,child: ElevatedButton(onPressed: (){
                  if(formKey.currentState!.validate()){
                    login(email.text,password.text,context);
                  }
                }, child: Text("Login"))),
                SizedBox(height: 7.0,),
                GestureDetector(onTap: (){
                  Navigator.push(context,MaterialPageRoute(builder: (context)=> SignUp()));
                },child: Text("Register?",style: TextStyle(color: Colors.white),))
              ],
            ),
          ),
        )
    );
  }

  void login(String email,String password,BuildContext context) async {
    var prefs = await SharedPreferences.getInstance();
    if(prefs.containsKey(email)){
      var details = prefs.getStringList(email)!;
      if(details[2] == password){
        Navigator.pushReplacement(context, MaterialPageRoute(builder: (context)=>MyHomePage(name:details[0])));
      }
      else{
        Fluttertoast.showToast(
            msg: "Incorrect Password",
            toastLength: Toast.LENGTH_SHORT,

            timeInSecForIosWeb: 1,
            backgroundColor: Colors.red,
            textColor: Colors.white,
            fontSize: 17.0
        );
      }
    }
    else{
      Fluttertoast.showToast(
          msg: "User doesn't exist",
          toastLength: Toast.LENGTH_SHORT,

          timeInSecForIosWeb: 1,
          backgroundColor: Colors.red,
          textColor: Colors.white,
          fontSize: 17.0
      );
    }

  }
}



class SignUp extends StatefulWidget {
  const SignUp({Key? key}) : super(key: key);

  @override
  State<SignUp> createState() => signUpState();
}

class signUpState extends State<SignUp> {

  final formkey = GlobalKey<FormState>();
  var email = TextEditingController();
  var password = TextEditingController();
  var name = TextEditingController();
  var phone = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(title: Text("Sign Up"),),
        body: Padding(
          padding: EdgeInsets.all(7.0),
          child: Form(
            key: formkey,
            child: Column(
              children: [
                TextFormField(
                  validator: (value){
                    if(value == null || value.isEmpty){
                      return "Please Enter Your Name";
                    }
                    return null;
                  },
                  controller: name,
                  decoration: InputDecoration(
                      labelText: "Name",
                       prefixIcon: Icon(Icons.person),
                  ),
                ),
                SizedBox(height: 7.0,),
                TextFormField(
                  validator: (value){
                    if(value == null || value.isEmpty){
                      return "Please enter Email";
                    }
                    return null;
                  },
                  keyboardType: TextInputType.emailAddress,
                  controller: email,
                  decoration: InputDecoration(
                      labelText: "Email",
                       prefixIcon: Icon(Icons.email),
                  ),
                ),
                SizedBox(height: 7.0,),
                TextFormField(
                  validator: (value){
                    if(value == null || value.isEmpty){
                      return "Please Enter Password";
                    }
                    return null;
                  },
                  controller: password,
                  obscureText: true,
                  decoration: InputDecoration(
                      labelText: "Password",
                       prefixIcon: Icon(Icons.password),
                  ),
                ),
                SizedBox(height: 7.0,),
                TextFormField(
                  validator: (value){
                    if(value == null || value.isEmpty){
                      return "Please Enter Your Phone Number";
                    }
                    else if(value.length != 10){
                      return "Invalid Phone Number";
                    }
                    return null;
                  },
                  controller: phone,
                  keyboardType: TextInputType.number,
                  decoration: InputDecoration(
                      labelText: "Phone",
                       prefixIcon: Icon(Icons.phone),
                  ),
                ),
                SizedBox(width: double.infinity,child: ElevatedButton(onPressed: (){
                  if(formkey.currentState!.validate()){
                    signUp(name.text,email.text,password.text,phone.text);
                  }
                }, child: Text("Sign Up"))),

              ],
            ),
          ),
        )
    );
  }

  void signUp(String name,String email,String password, String phone) async{
    var prefs = await SharedPreferences.getInstance();
    prefs.setStringList(email, [name,email,password,phone]);
  }
}
